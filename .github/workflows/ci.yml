name: CI Pipeline
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
env:
  APP_NAME: devops-api
  REGISTRY: ghcr.io
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install flake8 pytest black pytest-cov
      - name: Lint
        run: |
          flake8 app/src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Format check
        run: black --check app/src
      - name: Tests
        run: |
          cd app
          pytest -v --cov=src --cov-report=xml || true

  build-and-push:
    needs: [lint-and-test]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.APP_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      - uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
